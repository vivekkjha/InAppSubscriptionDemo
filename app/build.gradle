/*
 * Copyright 2018 Google LLC. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion androidCompileSdkVersion as Integer
    defaultConfig {
        // The applicationId should be set in the project gradle.properties files.
        applicationId androidApplicationId
        minSdkVersion androidMinimumSdkVersion as Integer
        targetSdkVersion androidTargetSdkVersion as Integer
        versionCode androidMobileVersionCode as Integer
        versionName androidMobileVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
//          Some of the features in this application require the signing key of the APK
//          to be registered in the Firebase Console. You can uncomment the lines below
//          to use the release signing key, or you can specify different key information here.
//          You will also need to update the `buildTypes` configuration below.
//
//        debug {
//            storeFile keystoreStoreFile
//            storePassword keystoreStorePassword
//            keyAlias keystoreKeyAlias
//            keyPassword keystoreKeyPassword
//        }
        release {
            storeFile keystoreStoreFile
            storePassword keystoreStorePassword
            keyAlias keystoreKeyAlias
            keyPassword keystoreKeyPassword
        }
    }
    buildTypes {
        debug {
//            Some of the features in this application require the signing key of the APK
//            to be registered in the Firebase Console. You can register your debug key signature
//            in the Firebase Console, update the `signingConfigs` configuration above,
//            and uncomment the line here.
//
//          signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Google Play Billing Library.
    implementation "com.android.billingclient:billing:$billingVersion"

    // Android Support Library.
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"
    implementation "com.android.support:support-v4:$supportVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Glide image library.
    implementation ("com.github.bumptech.glide:glide:$glideVersion") {
        exclude group: "com.android.support"
    }

    // Firebase libraries.
    implementation "com.google.firebase:firebase-core:16.0.7"
    implementation "com.google.firebase:firebase-functions:16.1.3"
    implementation "com.google.firebase:firebase-messaging:17.3.4"

    // FirebaseUI Auth library.
    implementation "com.firebaseui:firebase-ui-auth:$firebaseUiVersion"

    // Kotlin library.
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // ViewModel and LiveData extensions.
    implementation "android.arch.lifecycle:extensions:$archLifecycleVersion"

    // Java8 support for Lifecycles.
    implementation "android.arch.lifecycle:common-java8:$archLifecycleVersion"

    // Room Architecture Components.
    implementation "android.arch.persistence.room:runtime:$archRoomVersion"

    // Kotlin annotation processor for Room.
    kapt "android.arch.persistence.room:compiler:$archRoomVersion"


    // Test dependencies.
    testImplementation "junit:junit:$jUnitVersion"
}

apply plugin: 'com.google.gms.google-services'

